package sftpv2;

import Clases.ConexionORCL;
import Clases.ConexionSFTP;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.SftpException;
import java.io.File;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.InputMap;
import javax.swing.KeyStroke;
import javax.swing.table.TableColumnModel;



/**
 * @author Daniel
 */
public class Ventana extends javax.swing.JFrame {

    PreparedStatement pst;
    static Statement st;

    private static final String HOST = "164.96.15.59";
    private static final int  PUERTO = 22;
    
    int prog = 0;

    public Ventana() {
        initComponents();
        this.setLocationRelativeTo(null);
        /*Definir accion de botones mediante tecla enter*/ 
        InputMap map = new InputMap();
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "pressed");
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true), "released");
    
        BtnCargar.setInputMap(0, map);
        BtnSeleccionar.setInputMap(0,map);
        BtnBorrar.setInputMap(0,map);
        BtnLimpiar.setInputMap(0,map);
        BtnSalir.setInputMap(0,map);
        CbxSexo.setInputMap(0,map);
        CbxNacionalidad.setInputMap(0,map);
        CbxEstCvl.setInputMap(0,map);
        CbxMatrimonio.setInputMap(0,map);
        CbxDefuncion.setInputMap(0,map);
        
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ALT, 0, false), "pressed");
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ALT, 0, true), "released");
        
        BtnSeleccionar.setFocusPainted(true);
        
     
    }
    Login login = new Login();
    String nom;
    String rt;
    int cont, cant;
    String Flg_sexo, Flg_Nac, Flg_EstCiv, Flg_Mat, Flg_Def, ruta_salida = System.getProperty("user.home");
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnCargar = new javax.swing.JButton();
        BtnSeleccionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblArchivos = new javax.swing.JTable();
        CbxSexo = new javax.swing.JCheckBox();
        CbxNacionalidad = new javax.swing.JCheckBox();
        CbxEstCvl = new javax.swing.JCheckBox();
        CbxMatrimonio = new javax.swing.JCheckBox();
        CbxDefuncion = new javax.swing.JCheckBox();
        BtnBorrar = new javax.swing.JButton();
        BtnLimpiar = new javax.swing.JButton();
        TxtProgreso = new java.awt.Label();
        BtnSalir = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        txt_ruta_seleccion = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnCargar.setText("Cargar");
        BtnCargar.setNextFocusableComponent(BtnSalir);
        BtnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCargarActionPerformed(evt);
            }
        });

        BtnSeleccionar.setText("Seleccionar");
        BtnSeleccionar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnSeleccionar.setNextFocusableComponent(BtnBorrar);
        BtnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSeleccionarActionPerformed(evt);
            }
        });
        BtnSeleccionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnSeleccionarKeyPressed(evt);
            }
        });

        TblArchivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Ruta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblArchivos.setNextFocusableComponent(BtnSeleccionar);
        jScrollPane1.setViewportView(TblArchivos);

        CbxSexo.setText("   Sexo");
        CbxSexo.setNextFocusableComponent(CbxNacionalidad);

        CbxNacionalidad.setText("   Nacionalidad");
        CbxNacionalidad.setNextFocusableComponent(CbxEstCvl);

        CbxEstCvl.setText("   Est. Civil");
        CbxEstCvl.setNextFocusableComponent(CbxMatrimonio);

        CbxMatrimonio.setText("   Matrimonio");
        CbxMatrimonio.setNextFocusableComponent(CbxDefuncion);

        CbxDefuncion.setText("   Defunci√≥n");
        CbxDefuncion.setNextFocusableComponent(BtnCargar);

        BtnBorrar.setText("Borrar");
        BtnBorrar.setNextFocusableComponent(BtnLimpiar);
        BtnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBorrarActionPerformed(evt);
            }
        });

        BtnLimpiar.setText("Limpiar Lista");
        BtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarActionPerformed(evt);
            }
        });

        TxtProgreso.setAlignment(java.awt.Label.CENTER);

        BtnSalir.setText("Salir");
        BtnSalir.setNextFocusableComponent(TblArchivos);
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        txt_ruta_seleccion.setName(""); // NOI18N

        jLabel1.setText("Directorio :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(BtnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(BtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_ruta_seleccion, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CbxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CbxNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CbxEstCvl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CbxMatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CbxDefuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_ruta_seleccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CbxSexo)
                        .addGap(27, 27, 27)
                        .addComponent(CbxNacionalidad)
                        .addGap(27, 27, 27)
                        .addComponent(CbxEstCvl)
                        .addGap(27, 27, 27)
                        .addComponent(CbxMatrimonio)
                        .addGap(27, 27, 27)
                        .addComponent(CbxDefuncion)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnSeleccionar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnBorrar)
                        .addComponent(BtnCargar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnLimpiar)
                    .addComponent(BtnSalir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      public static String getFechaActual() {
        Date ahora = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("ddMMyyyy");
        return formateador.format(ahora);
    }
    
    public static String getHoraActual() {
        Date ahora = new Date();
        SimpleDateFormat formateador;
        formateador = new SimpleDateFormat("HHmmss");
        return formateador.format(ahora);
    }
    
    
    private void BtnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCargarActionPerformed

        DefaultTableModel tabla = ((DefaultTableModel) TblArchivos.getModel());
        cant = tabla.getRowCount();
        
        for (int i = 0; i < tabla.getRowCount(); i++) {
            jProgressBar1.setValue(0);
            jProgressBar1.update(jProgressBar1.getGraphics());
            TxtProgreso.setText("Procesando archivo " + (i + 1) + " de " + cant);
            SwingUtilities.updateComponentTreeUI(this);
            nom = tabla.getValueAt(i, 0).toString();
            rt = tabla.getValueAt(i, 1).toString();
            ruta_salida = ruta_salida+"_"+getFechaActual()+"-"+getHoraActual();
          
            /*File directorio = new File(ruta_salida);
            directorio.mkdir();*/
            String rtcorregida = rt.replace("\\", "\\\\");
            rtcorregida = rtcorregida+"_"+getFechaActual()+"-"+getHoraActual();
          
            File directorio = new File(rtcorregida);
            directorio.mkdir();

            try {
                ConexionSFTP sshConnector = new ConexionSFTP();
                sshConnector.connect(login.getUSUARIO(), login.getCONTRASE√ëA(), HOST, PUERTO);
                /* consigue nombre y directorio de archivo seleccionado*/
                String destino = ("/BDReplicacion/oradata/datos_txt/data_in/");

                sshConnector.AgregarArchivo(destino, rt, nom);
                jProgressBar1.setValue(10);
                jProgressBar1.update(jProgressBar1.getGraphics());
                /*copia archivo a sftp*/
                sshConnector.renombrar(nom);
                /*agrega extension .txt*/
                sshConnector.crearctl(nom);
                /*crea archivo ctl*/
                sshConnector.escribirctl(nom);
                /* escribe el contenido del ctl*/
                jProgressBar1.setValue(20);
                jProgressBar1.update(jProgressBar1.getGraphics());
                sshConnector.crearSh(nom);
                /*crea archivo .sh*/
                sshConnector.escribirSh(nom);
                /*escribe en el sh*/
                sshConnector.sqlload(nom);
                jProgressBar1.setValue(40);
                jProgressBar1.update(jProgressBar1.getGraphics());
                
                System.out.println(".log");
                sshConnector.DescargarPorsftp2(rtcorregida + "\\", nom + ".log" ,"/BDReplicacion/oradata/datos_txt/data_in/" );
                System.out.println(".bad");
                sshConnector.DescargarPorsftp2(rtcorregida + "\\", nom + ".bad", "/BDReplicacion/oradata/datos_txt/data_in/" );
                System.out.println(".dsc");
                sshConnector.DescargarPorsftp2(rtcorregida + "\\", nom + ".dsc", "/BDReplicacion/oradata/datos_txt/data_in/" );
                /*ejecuta el sh con el loader*/
                sshConnector.Borrar_temporales(nom);
                jProgressBar1.setValue(50);
                jProgressBar1.update(jProgressBar1.getGraphics());

            } catch (JSchException ex) {
                JOptionPane.showMessageDialog(null, "Error de Conexi√≥n \n" + ex.getMessage());

            } catch (IllegalAccessException ex) {
                JOptionPane.showMessageDialog(null, "No hay Conexi√≥n Establecida \n" + ex.getMessage());

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error de IO \n" + ex.getMessage());

            } catch (SftpException ex) {
                JOptionPane.showMessageDialog(null, "Error de SFTP \n" + ex.getMessage());

            } catch (Exception ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
            ConexionORCL cc = new ConexionORCL();
            Connection cn = cc.conexion();
            try {
                String codigo_flags;

                if (CbxSexo.isSelected()) {
                    Flg_sexo = "1";
                } else {
                    Flg_sexo = "0";
                }

                if (CbxNacionalidad.isSelected()) {
                    Flg_Nac = "1";
                } else {
                    Flg_Nac = "0";
                }

                if (CbxEstCvl.isSelected()) {
                    Flg_EstCiv = "1";
                } else {
                    Flg_EstCiv = "0";
                }

                if (CbxMatrimonio.isSelected()) {
                    Flg_Mat = "1";
                } else {
                    Flg_Mat = "0";
                }

                if (CbxDefuncion.isSelected()) {
                    Flg_Def = "1";
                } else {
                    Flg_Def = "0";
                }

                codigo_flags = Flg_sexo + Flg_Nac + Flg_EstCiv + Flg_Mat + Flg_Def;

                CallableStatement cst = cn.prepareCall("call poblarsuseso('" + codigo_flags + "','" + nom + "')");
                
                cst.execute();

                jProgressBar1.setValue(80);
                jProgressBar1.update(jProgressBar1.getGraphics());

            } catch (SQLException ex) {
                Logger.getLogger(ConexionORCL.class.getName()).log(Level.SEVERE, null, ex);
            }
            ConexionSFTP sshConnector = new ConexionSFTP();
            try {
                sshConnector.connect(login.getUSUARIO(), login.getCONTRASE√ëA(), HOST, PUERTO);               
                sshConnector.DescargarPorsftp(rtcorregida + "\\", nom + "e", "/BDReplicacion/oradata/datos_txt/data_out/");
                jProgressBar1.setValue(90);
                jProgressBar1.update(jProgressBar1.getGraphics());
                jProgressBar1.setValue(95);
                jProgressBar1.update(jProgressBar1.getGraphics());
                sshConnector.Borrar_temporales_out(nom);
                jProgressBar1.setValue(100);
                jProgressBar1.update(jProgressBar1.getGraphics());
                sshConnector.disconnect();
            } catch (JSchException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        TxtProgreso.setText("Proceso Terminado");
    }//GEN-LAST:event_BtnCargarActionPerformed

    private void BtnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSeleccionarActionPerformed
   JFileChooser file = new JFileChooser( System.getProperty("user.home")+"\\Desktop\\");
    file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    DefaultTableModel tabla = ((DefaultTableModel) TblArchivos.getModel());   
    //TableColumnModel tcm = TblArchivos.getColumnModel();
    //tcm.removeColumn( tcm.getColumn(1) );
    file.setMultiSelectionEnabled(true);
    int result = file.showOpenDialog(this);
    File[] files = file.getSelectedFiles();
    if (result == JFileChooser.APPROVE_OPTION) {
    String sDirectorio = file.getSelectedFile().toString();
    File f = new File(sDirectorio);
    if(f.isFile()){
        File[] filess = file.getSelectedFiles();
            for (File file1 : filess) {
                String[] nomsel = new String[2];
               nomsel[0] = file1.getName();
                nomsel[1] = file1.getPath();
               tabla.addRow(nomsel);
               txt_ruta_seleccion.setText(f.getPath());
           }
    }
    if (f.isDirectory()){
        File[] ficheros = f.listFiles();
        for (int x=0;x<ficheros.length;x++){
            if(ficheros[x].isFile()){
            String[] nomsel = new String[2];
               nomsel[0] = (ficheros[x].getName());
                nomsel[1] = (ficheros[x].getPath());
               tabla.addRow(nomsel);
            } 
            txt_ruta_seleccion.setText(f.getPath());
        }
    } 

        }
    }//GEN-LAST:event_BtnSeleccionarActionPerformed

    private void BtnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBorrarActionPerformed
        DefaultTableModel tabla = ((DefaultTableModel) TblArchivos.getModel());
        tabla.removeRow(TblArchivos.getSelectedRow());
        TxtProgreso.setText("");
        txt_ruta_seleccion.setText("");
    }//GEN-LAST:event_BtnBorrarActionPerformed

    private void BtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarActionPerformed
        DefaultTableModel tabla = ((DefaultTableModel) TblArchivos.getModel());
        TxtProgreso.setText("");
        txt_ruta_seleccion.setText("");
        do {
            tabla.removeRow(0);
        } while (tabla.getRowCount() != 0);
    }//GEN-LAST:event_BtnLimpiarActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        System.exit(0);   // TODO add your handling code here:
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void BtnSeleccionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnSeleccionarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER )  {
            
        } 
    }//GEN-LAST:event_BtnSeleccionarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ventana().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBorrar;
    private javax.swing.JButton BtnCargar;
    private javax.swing.JButton BtnLimpiar;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JButton BtnSeleccionar;
    private javax.swing.JCheckBox CbxDefuncion;
    private javax.swing.JCheckBox CbxEstCvl;
    private javax.swing.JCheckBox CbxMatrimonio;
    private javax.swing.JCheckBox CbxNacionalidad;
    private javax.swing.JCheckBox CbxSexo;
    private javax.swing.JTable TblArchivos;
    private java.awt.Label TxtProgreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label txt_ruta_seleccion;
    // End of variables declaration//GEN-END:variables
}
